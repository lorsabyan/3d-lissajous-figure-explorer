{"version":3,"file":"index-Cff_qJ60.js","sources":["../../src/js/config.js","../../src/js/utils.js","../../src/js/ui-controls.js","../../src/js/audio-system.js","../../src/js/scene-manager.js","../../src/js/performance-monitor.js","../../src/js/main.js"],"sourcesContent":["// Application configuration and constants\r\nexport const CONFIG = {\r\n    CURVE_POINTS: 2000,\r\n    ANIMATION_FRAME_LIMIT: 60,\r\n    PROJECTION_UPDATE_INTERVAL: 2,\r\n    GEOMETRY_CACHE_LIMIT: 10,\r\n    DEBOUNCE_CURVE_UPDATE: 16,\r\n    DEBOUNCE_GRID_UPDATE: 100,\r\n    THROTTLE_AUDIO_UPDATE: 50,\r\n    DEBOUNCE_RESIZE: 100\r\n};\r\n\r\nexport const DEFAULT_PARAMS = {\r\n    a: 1, b: 2, c: 3, \r\n    A: 1, B: 1, C: 1,\r\n    deltaX: Math.PI / 2, \r\n    deltaY: 0, \r\n    deltaZ: 0,\r\n    damping: 0.0,\r\n    lineThickness: 0.015, \r\n    gridThickness: 0.010, \r\n    gridBrightness: 1.7,\r\n    color: { h: 120, s: 1, l: 0.5 }, \r\n    glow: 0.5, \r\n    aa: true, \r\n    isPhaseAnimating: false,\r\n    isAudioEnabled: false\r\n};\r\n\r\nexport const MATHEMATICAL_EQUATIONS = `\r\n    $$x(t) = A e^{-\\\\lambda t} \\\\sin(a t' + \\\\delta_x)$$\r\n    $$y(t) = B e^{-\\\\lambda t} \\\\sin(b t' + \\\\delta_y)$$\r\n    $$z(t) = C e^{-\\\\lambda t} \\\\sin(c t' + \\\\delta_z)$$\r\n`;\r\n\r\nexport const CAMERA_PRESETS = {\r\n    perspective: { x: 2, y: 3, z: 5 },\r\n    top: { x: 0, y: 6, z: 0.01 },\r\n    front: { x: 0, y: 0, z: 6 },\r\n    side: { x: 6, y: 0, z: 0 }\r\n};\r\n","// Utility functions for the application\r\nexport const clamp = (value, min, max) => Math.max(min, Math.min(max, value));\r\n\r\nexport const debounce = (func, wait) => {\r\n    let timeout;\r\n    return function executedFunction(...args) {\r\n        const later = () => {\r\n            clearTimeout(timeout);\r\n            func(...args);\r\n        };\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(later, wait);\r\n    };\r\n};\r\n\r\nexport const throttle = (func, limit) => {\r\n    let inThrottle;\r\n    return function() {\r\n        const args = arguments;\r\n        const context = this;\r\n        if (!inThrottle) {\r\n            func.apply(context, args);\r\n            inThrottle = true;\r\n            setTimeout(() => inThrottle = false, limit);\r\n        }\r\n    };\r\n};\r\n\r\nexport const validateParams = (params) => {\r\n    params.a = clamp(params.a, 1, 10);\r\n    params.b = clamp(params.b, 1, 10);\r\n    params.c = clamp(params.c, 0, 10);\r\n    params.A = clamp(params.A, 0.1, 2);\r\n    params.B = clamp(params.B, 0.1, 2);\r\n    params.C = clamp(params.C, 0.1, 2);\r\n    params.damping = clamp(params.damping, 0, 0.5);\r\n    return params;\r\n};\r\n\r\nexport const createCacheKey = (params) => {\r\n    return `${params.a}-${params.b}-${params.c}-${params.A}-${params.B}-${params.C}-${params.deltaX.toFixed(3)}-${params.deltaY.toFixed(3)}-${params.deltaZ.toFixed(3)}-${params.damping.toFixed(3)}`;\r\n};\r\n\r\nexport const needsUpdate = (currentParams, lastParams) => {\r\n    const currentString = JSON.stringify(currentParams);\r\n    const lastString = JSON.stringify(lastParams);\r\n    return currentString !== lastString;\r\n};\r\n","// Custom UI Controls - Knobs and Switches\r\nexport class BaseKnob extends EventTarget {\r\n    constructor(container, label, options) {\r\n        super();\r\n        this.container = container;\r\n        this.options = options;\r\n        this.isDragging = false;\r\n        this.value = options.initial;\r\n        this.angle = this.valueToAngle(this.value);\r\n        this.createDOM(label, options.isSwitch);\r\n        this.addEventListeners();\r\n        this.updateVisuals();\r\n    }\r\n\r\n    createDOM(label, isSwitch = false) {\r\n        const size = 80;\r\n        const svgNS = \"http://www.w3.org/2000/svg\";\r\n        const svg = document.createElementNS(svgNS, \"svg\");\r\n        svg.setAttribute(\"class\", \"knob\");\r\n        svg.setAttribute(\"width\", size);\r\n        svg.setAttribute(\"height\", size);\r\n        svg.setAttribute(\"viewBox\", `0 0 ${size} ${size}`);\r\n\r\n        const background = document.createElementNS(svgNS, \"circle\");\r\n        background.setAttribute(\"cx\", size / 2);\r\n        background.setAttribute(\"cy\", size / 2);\r\n        background.setAttribute(\"r\", size / 2 * 0.9);\r\n        background.setAttribute(\"fill\", \"#1f2937\");\r\n        background.setAttribute(\"stroke\", \"#4b5563\");\r\n        background.setAttribute(\"stroke-width\", \"2\");\r\n        svg.appendChild(background);\r\n\r\n        const indicator = document.createElementNS(svgNS, \"circle\");\r\n        indicator.setAttribute(\"r\", 4);\r\n        indicator.setAttribute(\"fill\", \"#4ade80\");\r\n        this.indicator = indicator;\r\n        svg.appendChild(indicator);\r\n        \r\n        const text = document.createElementNS(svgNS, \"text\");\r\n        text.setAttribute(\"x\", \"50%\");\r\n        text.setAttribute(\"y\", \"50%\");\r\n        text.setAttribute(\"dy\", \"0.3em\");\r\n        text.setAttribute(\"text-anchor\", \"middle\");\r\n        text.setAttribute(\"font-family\", \"Roboto Mono, monospace\");\r\n        text.setAttribute(\"font-size\", isSwitch ? \"24\" : \"14\");\r\n        text.setAttribute(\"font-weight\", \"bold\");\r\n        text.setAttribute(\"fill\", \"#f3f4f6\");\r\n        this.text = text;\r\n        svg.appendChild(text);\r\n        \r\n        const labelText = document.createElement(\"div\");\r\n        labelText.textContent = label;\r\n        labelText.className = \"text-sm mt-1\";\r\n\r\n        this.container.appendChild(svg);\r\n        this.container.appendChild(labelText);\r\n    }    addEventListeners() {\r\n        this.mouseDownHandler = (e) => this.startDrag(e);\r\n        this.mouseMoveHandler = (e) => this.drag(e);\r\n        this.mouseUpHandler = (e) => this.endDrag(e);\r\n        this.touchStartHandler = (e) => this.startDrag(e);\r\n        this.touchMoveHandler = (e) => this.drag(e);\r\n        this.touchEndHandler = (e) => this.endDrag(e);\r\n\r\n        this.container.addEventListener(\"mousedown\", this.mouseDownHandler);\r\n        window.addEventListener(\"mousemove\", this.mouseMoveHandler);\r\n        window.addEventListener(\"mouseup\", this.mouseUpHandler);\r\n        this.container.addEventListener(\"touchstart\", this.touchStartHandler, { passive: false });\r\n        window.addEventListener(\"touchmove\", this.touchMoveHandler, { passive: false });\r\n        window.addEventListener(\"touchend\", this.touchEndHandler);\r\n    }\r\n\r\n    cleanup() {\r\n        if (this.container) {\r\n            this.container.removeEventListener(\"mousedown\", this.mouseDownHandler);\r\n            this.container.removeEventListener(\"touchstart\", this.touchStartHandler);\r\n        }\r\n        window.removeEventListener(\"mousemove\", this.mouseMoveHandler);\r\n        window.removeEventListener(\"mouseup\", this.mouseUpHandler);\r\n        window.removeEventListener(\"touchmove\", this.touchMoveHandler);\r\n        window.removeEventListener(\"touchend\", this.touchEndHandler);\r\n    }\r\n\r\n    startDrag(e) { \r\n        e.preventDefault(); \r\n        this.isDragging = true; \r\n        this.container.style.cursor = 'grabbing'; \r\n    }\r\n\r\n    endDrag() { \r\n        this.isDragging = false; \r\n        this.container.style.cursor = 'pointer'; \r\n    }\r\n\r\n    setValue(newValue) {\r\n        if (this.isDragging) return;\r\n        this.value = Math.max(this.options.min, Math.min(this.options.max, newValue));\r\n        this.angle = this.valueToAngle(this.value);\r\n        this.updateVisuals();\r\n    }\r\n\r\n    updateVisuals() {\r\n        const size = 80;\r\n        const radius = size/2 * 0.7;\r\n        this.indicator.setAttribute(\"cx\", size / 2 + radius * Math.sin(this.angle));\r\n        this.indicator.setAttribute(\"cy\", size / 2 - radius * Math.cos(this.angle));\r\n        if(this.text) {\r\n            this.text.textContent = this.value.toFixed(this.options.precision || 0);\r\n        }\r\n    }\r\n}\r\n\r\nexport class RotarySwitch extends BaseKnob {\r\n    constructor(container, label, options) {\r\n        super(container, label, {...options, isSwitch: true, precision: 0});\r\n    }\r\n\r\n    drag(e) {\r\n        if (!this.isDragging) return;\r\n        e.preventDefault();\r\n        const rect = this.container.getBoundingClientRect();\r\n        const centerX = rect.left + rect.width / 2;\r\n        const centerY = rect.top + rect.height / 2;\r\n        const clientX = e.clientX || e.touches[0].clientX;\r\n        const clientY = e.clientY || e.touches[0].clientY;\r\n        const currentAngle = (Math.atan2(clientY - centerY, clientX - centerX) + Math.PI / 2 + 2 * Math.PI) % (2 * Math.PI);\r\n        const numSteps = this.options.max - this.options.min + 1;\r\n        const stepAngle = (2 * Math.PI) / numSteps;\r\n        let valueIndex = Math.round(currentAngle / stepAngle);\r\n        valueIndex = valueIndex % numSteps;\r\n        const newValue = this.options.min + valueIndex;\r\n        if (newValue !== this.value) {\r\n            this.value = newValue;\r\n            this.angle = this.valueToAngle(this.value);\r\n            this.updateVisuals();\r\n            this.dispatchEvent(new CustomEvent('change', { detail: { value: this.value } }));\r\n        }\r\n    }\r\n\r\n    valueToAngle(value) {\r\n        const numSteps = this.options.max - this.options.min + 1;\r\n        const stepAngle = (2 * Math.PI) / numSteps;\r\n        return (value - this.options.min) * stepAngle;\r\n    }\r\n}\r\n\r\nexport class Knob extends BaseKnob {\r\n    constructor(container, label, options) {\r\n        super(container, label, {...options, isSwitch: false});\r\n    }\r\n\r\n    drag(e) {\r\n        if (!this.isDragging) return;\r\n        e.preventDefault();\r\n        const rect = this.container.getBoundingClientRect();\r\n        const centerX = rect.left + rect.width / 2;\r\n        const centerY = rect.top + rect.height / 2;\r\n        const clientX = e.clientX || e.touches[0].clientX;\r\n        const clientY = e.clientY || e.touches[0].clientY;\r\n        const dx = clientX - centerX;\r\n        const dy = clientY - centerY;\r\n        this.angle = (Math.atan2(dy, dx) + Math.PI / 2 + 2 * Math.PI)%(2*Math.PI);\r\n        this.value = this.angleToValue(this.angle);\r\n        this.updateVisuals();\r\n        this.dispatchEvent(new CustomEvent('change', { detail: { value: this.value } }));\r\n    }\r\n\r\n    updateVisuals() {\r\n        super.updateVisuals();\r\n        if(this.options.isPhase) {\r\n            this.text.textContent = `${this.value.toFixed(2)}π`;\r\n        }\r\n    }\r\n\r\n    angleToValue(angle) {\r\n        return (angle / (2 * Math.PI)) * (this.options.max - this.options.min) + this.options.min;\r\n    }\r\n\r\n    valueToAngle(value) { \r\n        return ((value - this.options.min) / (this.options.max - this.options.min)) * 2 * Math.PI; \r\n    }\r\n}\r\n","// Audio System for sonifying the Lissajous curves\r\nexport class AudioSystem {\r\n    constructor() {\r\n        this.audioContext = null;\r\n        this.masterGain = null;\r\n        this.oscillators = {};\r\n        this.initialized = false;\r\n    }    async init() {\r\n        if (this.initialized) return;\r\n        \r\n        try {\r\n            this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n            \r\n            // Resume audio context if it's suspended (required for user interaction)\r\n            if (this.audioContext.state === 'suspended') {\r\n                await this.audioContext.resume();\r\n            }\r\n            \r\n            this.masterGain = this.audioContext.createGain();\r\n            this.masterGain.gain.value = 0; // Muted by default\r\n            this.masterGain.connect(this.audioContext.destination);\r\n\r\n            ['a', 'b', 'c'].forEach(key => {\r\n                const osc = this.audioContext.createOscillator();\r\n                const gainNode = this.audioContext.createGain();\r\n                osc.type = 'sine';\r\n                osc.frequency.setValueAtTime(110, this.audioContext.currentTime);\r\n                osc.connect(gainNode);\r\n                gainNode.connect(this.masterGain);\r\n                gainNode.gain.setValueAtTime(0, this.audioContext.currentTime);\r\n                osc.start();\r\n                this.oscillators[key] = { osc, gainNode };\r\n            });\r\n            \r\n            this.initialized = true;\r\n            console.log('Audio system initialized successfully');\r\n        } catch (error) {\r\n            console.warn('Audio initialization failed:', error);\r\n            this.initialized = false;\r\n        }\r\n    }    updateParams(params) {\r\n        if (!this.initialized || !this.audioContext) {\r\n            return;\r\n        }\r\n        \r\n        try {\r\n            const baseFreq = 110; // A2\r\n            const now = this.audioContext.currentTime + 0.01; // Small delay to prevent clicking\r\n            \r\n            this.oscillators.a.osc.frequency.linearRampToValueAtTime(baseFreq * params.a, now);\r\n            this.oscillators.b.osc.frequency.linearRampToValueAtTime(baseFreq * params.b, now);\r\n            if (params.c > 0) {\r\n                this.oscillators.c.osc.frequency.linearRampToValueAtTime(baseFreq * params.c, now);\r\n            }\r\n\r\n            this.oscillators.a.gainNode.gain.linearRampToValueAtTime(params.A * 0.08, now);\r\n            this.oscillators.b.gainNode.gain.linearRampToValueAtTime(params.B * 0.08, now);\r\n            this.oscillators.c.gainNode.gain.linearRampToValueAtTime(params.c > 0 ? params.C * 0.08 : 0, now);\r\n        } catch (error) {\r\n            console.warn('Audio update failed:', error);\r\n        }\r\n    }\r\n\r\n    setVolume(volume) {\r\n        if (this.masterGain && this.audioContext) {\r\n            this.masterGain.gain.linearRampToValueAtTime(volume, this.audioContext.currentTime + 0.1);\r\n        }\r\n    }\r\n\r\n    cleanup() {\r\n        try {\r\n            if (this.audioContext && this.audioContext.state !== 'closed') {\r\n                this.audioContext.close();\r\n            }\r\n        } catch (error) {\r\n            console.warn('Audio cleanup error:', error);\r\n        }\r\n    }\r\n}\r\n","// 3D Scene management for the Lissajous curves\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js';\r\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass.js';\r\nimport { SMAAPass } from 'three/examples/jsm/postprocessing/SMAAPass.js';\r\nimport { CONFIG } from './config.js';\r\nimport { validateParams, createCacheKey, needsUpdate } from './utils.js';\r\n\r\nexport class SceneManager {\r\n    constructor() {\r\n        this.mainScene = new THREE.Scene();\r\n        this.projectionScenes = {\r\n            xy: new THREE.Scene(),\r\n            xz: new THREE.Scene(),\r\n            yz: new THREE.Scene()\r\n        };\r\n        \r\n        this.geometryCache = new Map();\r\n        this.gridMaterialCache = new Map();\r\n        this.lastUpdateParams = {};\r\n        \r\n        // Initialize non-DOM dependent parts first\r\n        this.initializeScenes();\r\n        \r\n        // DOM-dependent initialization will be called later\r\n        this.initialized = false;\r\n    }\r\n    \r\n    initialize() {\r\n        if (this.initialized) return;\r\n        \r\n        this.initializeRenderers();\r\n        this.initializeCameras();\r\n        this.initializePostProcessing();\r\n        this.initializeControls();\r\n        this.initializeGrid();\r\n        \r\n        this.initialized = true;\r\n    }\r\n\r\n    initializeScenes() {\r\n        this.mainScene.background = new THREE.Color('#0a0a0a');\r\n        \r\n        // Add axis labels\r\n        this.mainScene.add(\r\n            this.createAxisLabel('X', '#ff7b7b', new THREE.Vector3(2.5, 0, 0)),\r\n            this.createAxisLabel('Y', '#7bff7b', new THREE.Vector3(0, 2.5, 0)),\r\n            this.createAxisLabel('Z', '#7b7bff', new THREE.Vector3(0, 0, 2.5))\r\n        );\r\n\r\n        // Setup projection scenes\r\n        const projGridColor = new THREE.Color(0x227722);\r\n        for (const [key, scene] of Object.entries(this.projectionScenes)) {\r\n            scene.background = new THREE.Color('#0a0a0a');\r\n            const grid = new THREE.GridHelper(4, 8, projGridColor, projGridColor);\r\n            if (key === 'xy') grid.rotation.x = Math.PI / 2;\r\n            else if (key === 'yz') grid.rotation.z = Math.PI / 2;\r\n            scene.add(grid);\r\n        }\r\n    }    initializeRenderers() {\r\n        const webglCanvas = document.querySelector('#webgl');\r\n        const canvasXY = document.querySelector('#canvas-xy');\r\n        const canvasXZ = document.querySelector('#canvas-xz');\r\n        const canvasYZ = document.querySelector('#canvas-yz');\r\n        \r\n        if (!webglCanvas || !canvasXY || !canvasXZ || !canvasYZ) {\r\n            throw new Error('Required canvas elements not found in DOM');\r\n        }\r\n        \r\n        this.mainRenderer = new THREE.WebGLRenderer({ \r\n            canvas: webglCanvas, \r\n            antialias: false,\r\n            powerPreference: \"high-performance\",\r\n            alpha: false\r\n        });\r\n        this.mainRenderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\r\n        this.mainRenderer.setSize(window.innerWidth, window.innerHeight);\r\n        this.mainRenderer.shadowMap.enabled = false;\r\n\r\n        this.projectionRenderers = {\r\n            xy: new THREE.WebGLRenderer({ \r\n                canvas: canvasXY, \r\n                antialias: true,\r\n                alpha: false,\r\n                powerPreference: \"default\"\r\n            }),\r\n            xz: new THREE.WebGLRenderer({ \r\n                canvas: canvasXZ, \r\n                antialias: true,\r\n                alpha: false,\r\n                powerPreference: \"default\"\r\n            }),\r\n            yz: new THREE.WebGLRenderer({ \r\n                canvas: canvasYZ, \r\n                antialias: true,\r\n                alpha: false,\r\n                powerPreference: \"default\"\r\n            }),\r\n        };\r\n        \r\n        Object.values(this.projectionRenderers).forEach(r => {\r\n            r.setPixelRatio(Math.min(window.devicePixelRatio, 1.5));\r\n        });\r\n    }\r\n\r\n    initializeCameras() {\r\n        this.mainCamera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n        this.mainCamera.position.set(2, 3, 5);\r\n        \r\n        this.projectionCameras = {\r\n            xy: new THREE.OrthographicCamera(-2.2, 2.2, 2.2, -2.2, 0.1, 1000),\r\n            xz: new THREE.OrthographicCamera(-2.2, 2.2, 2.2, -2.2, 0.1, 1000),\r\n            yz: new THREE.OrthographicCamera(-2.2, 2.2, 2.2, -2.2, 0.1, 1000),\r\n        };\r\n        \r\n        this.projectionCameras.xy.position.set(0, 0, 10);\r\n        this.projectionCameras.xz.position.set(0, 10, 0);\r\n        this.projectionCameras.xz.lookAt(0, 0, 0);\r\n        this.projectionCameras.yz.position.set(10, 0, 0);\r\n        this.projectionCameras.yz.lookAt(0, 0, 0);\r\n    }\r\n\r\n    initializePostProcessing() {\r\n        this.composer = new EffectComposer(this.mainRenderer);\r\n        this.renderPass = new RenderPass(this.mainScene, this.mainCamera);\r\n        this.bloomPass = new UnrealBloomPass(\r\n            new THREE.Vector2(window.innerWidth, window.innerHeight), \r\n            0.5, 0.3, 0.0\r\n        );\r\n        this.smaaPass = new SMAAPass(\r\n            window.innerWidth * this.mainRenderer.getPixelRatio(), \r\n            window.innerHeight * this.mainRenderer.getPixelRatio()\r\n        );\r\n        \r\n        this.composer.addPass(this.renderPass);\r\n        this.composer.addPass(this.bloomPass);\r\n        this.composer.addPass(this.smaaPass);\r\n    }\r\n\r\n    initializeControls() {\r\n        this.controls = new OrbitControls(this.mainCamera, this.mainRenderer.domElement);\r\n        this.controls.enableDamping = true;\r\n        this.controls.autoRotate = true;\r\n        this.controls.autoRotateSpeed = 0.5;\r\n    }\r\n\r\n    initializeGrid() {\r\n        this.gridGroup = new THREE.Group();\r\n        this.mainScene.add(this.gridGroup);\r\n    }\r\n\r\n    createAxisLabel(text, color, position) {\r\n        const canvas = document.createElement('canvas');\r\n        const context = canvas.getContext('2d');\r\n        const size = 128;\r\n        canvas.width = size;\r\n        canvas.height = size;\r\n        context.font = `bold ${size * 0.8}px 'Roboto Mono', monospace`;\r\n        context.fillStyle = color;\r\n        context.textAlign = 'center';\r\n        context.textBaseline = 'middle';\r\n        context.fillText(text, size / 2, size / 2);\r\n        const texture = new THREE.CanvasTexture(canvas);\r\n        const material = new THREE.SpriteMaterial({ map: texture, transparent: true, sizeAttenuation: false });\r\n        const sprite = new THREE.Sprite(material);\r\n        sprite.position.copy(position);\r\n        sprite.scale.set(0.1, 0.1, 1);\r\n        return sprite;\r\n    }\r\n\r\n    getGridMaterial(brightness) {\r\n        const key = brightness.toFixed(2);\r\n        if (!this.gridMaterialCache.has(key)) {\r\n            this.gridMaterialCache.set(key, new THREE.MeshStandardMaterial({\r\n                color: '#000000', \r\n                emissive: new THREE.Color(0x1a4d1a), \r\n                emissiveIntensity: brightness\r\n            }));\r\n        }\r\n        return this.gridMaterialCache.get(key);\r\n    }\r\n\r\n    createGlowingGridPlane(size, divisions, material, thickness) {\r\n        const group = new THREE.Group();\r\n        const step = size / divisions;\r\n        const halfSize = size / 2;\r\n        for (let i = 0; i <= divisions; i++) {\r\n            const pos = -halfSize + i * step;\r\n            const vPath = new THREE.LineCurve3(new THREE.Vector3(pos, -halfSize, 0), new THREE.Vector3(pos, halfSize, 0));\r\n            group.add(new THREE.Mesh(new THREE.TubeGeometry(vPath, 1, thickness, 4), material));\r\n            const hPath = new THREE.LineCurve3(new THREE.Vector3(-halfSize, pos, 0), new THREE.Vector3(halfSize, pos, 0));\r\n            group.add(new THREE.Mesh(new THREE.TubeGeometry(hPath, 1, thickness, 4), material));\r\n        }\r\n        return group;\r\n    }\r\n\r\n    updateGrid(params) {\r\n        // Clean up old grid objects\r\n        while(this.gridGroup.children.length > 0) {\r\n            const child = this.gridGroup.children[0];\r\n            this.gridGroup.remove(child);\r\n            if (child.children) {\r\n                child.children.forEach(grandchild => {\r\n                    if (grandchild.geometry) grandchild.geometry.dispose();\r\n                    if (grandchild.material && !this.gridMaterialCache.has(grandchild.material)) {\r\n                        grandchild.material.dispose();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        \r\n        const currentMaterial = this.getGridMaterial(params.gridBrightness);\r\n        const gridXY = this.createGlowingGridPlane(4, 8, currentMaterial, params.gridThickness);\r\n        const gridXZ = this.createGlowingGridPlane(4, 8, currentMaterial, params.gridThickness);\r\n        gridXZ.rotation.x = Math.PI / 2;\r\n        const gridYZ = this.createGlowingGridPlane(4, 8, currentMaterial, params.gridThickness);\r\n        gridYZ.rotation.y = Math.PI / 2;\r\n        this.gridGroup.add(gridXY, gridXZ, gridYZ);    }\r\n\r\n    needsCurveUpdate(params) {\r\n        const currentParams = {\r\n            a: params.a, b: params.b, c: params.c,\r\n            A: params.A, B: params.B, C: params.C,\r\n            deltaX: params.deltaX, deltaY: params.deltaY, deltaZ: params.deltaZ,\r\n            damping: params.damping, lineThickness: params.lineThickness,\r\n            color: `${params.color.h}-${params.color.s}-${params.color.l}`\r\n        };\r\n        \r\n        if (needsUpdate(currentParams, this.lastUpdateParams)) {\r\n            this.lastUpdateParams = currentParams;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    updateCurve(params) {\r\n        if (!this.needsCurveUpdate(params)) return;\r\n        \r\n        validateParams(params);\r\n        \r\n        // Clean up previous resources\r\n        if (this.mainCurve) {\r\n            this.mainScene.remove(this.mainCurve);\r\n            this.mainCurve.geometry.dispose();\r\n        }\r\n        if (this.mainMaterial) this.mainMaterial.dispose();\r\n        if (this.projectionMaterial) this.projectionMaterial.dispose();\r\n        \r\n        if (this.projectionLines) {\r\n            for(const [key, line] of Object.entries(this.projectionLines)) {\r\n                this.projectionScenes[key].remove(line);\r\n                line.geometry.dispose();\r\n            }\r\n        }\r\n        \r\n        const tempColor = new THREE.Color();\r\n        tempColor.setHSL(params.color.h / 360, params.color.s, params.color.l);\r\n\r\n        this.mainMaterial = new THREE.MeshStandardMaterial({\r\n            color: '#000000', \r\n            emissive: tempColor, \r\n            emissiveIntensity: 1.5 \r\n        });\r\n        this.projectionMaterial = new THREE.LineBasicMaterial({ color: tempColor });\r\n        \r\n        // Generate curve points with caching\r\n        const cacheKey = createCacheKey(params);\r\n        let points;\r\n        \r\n        if (this.geometryCache.has(cacheKey) && this.geometryCache.size < CONFIG.GEOMETRY_CACHE_LIMIT) {\r\n            points = this.geometryCache.get(cacheKey);\r\n        } else {\r\n            points = this.generateCurvePoints(params);\r\n            if (this.geometryCache.size < CONFIG.GEOMETRY_CACHE_LIMIT) {\r\n                this.geometryCache.set(cacheKey, points);\r\n            }\r\n        }\r\n        \r\n        const lineGeometry = new THREE.BufferGeometry().setFromPoints(points);\r\n        const path = new THREE.CatmullRomCurve3(points);\r\n        const mainGeometry = new THREE.TubeGeometry(path, CONFIG.CURVE_POINTS / 4, params.lineThickness, 8, false);\r\n        \r\n        this.mainCurve = new THREE.Mesh(mainGeometry, this.mainMaterial);\r\n        this.mainScene.add(this.mainCurve);\r\n\r\n        // Create projection lines\r\n        this.projectionLines = {};\r\n        for (const [key, scene] of Object.entries(this.projectionScenes)) {\r\n            this.projectionLines[key] = new THREE.Line(lineGeometry.clone(), this.projectionMaterial);\r\n            scene.add(this.projectionLines[key]);\r\n        }\r\n    }\r\n\r\n    generateCurvePoints(params) {\r\n        const points = [];\r\n        for (let i = 0; i <= CONFIG.CURVE_POINTS; i++) {\r\n            const t = i / CONFIG.CURVE_POINTS;\r\n            const time = t * 20 * Math.PI;\r\n            const decay = Math.exp(-params.damping * t * 5);\r\n            const x = params.A * decay * Math.sin(params.a * time / 10 + params.deltaX);\r\n            const y = params.B * decay * Math.sin(params.b * time / 10 + params.deltaY);\r\n            const z = params.c === 0 ? 0 : params.C * decay * Math.sin(params.c * time / 10 + params.deltaZ);\r\n            points.push(new THREE.Vector3(x, y, z));\r\n        }\r\n        return points;\r\n    }\r\n\r\n    setCameraPosition(position, target = new THREE.Vector3(0, 0, 0)) {\r\n        if (typeof window.gsap !== 'undefined') {\r\n            window.gsap.to(this.mainCamera.position, { \r\n                duration: 1.2, \r\n                ease: \"power2.inOut\", \r\n                ...position,\r\n                onUpdate: () => this.mainCamera.updateProjectionMatrix()\r\n            });\r\n            window.gsap.to(this.controls.target, { \r\n                duration: 1.2, \r\n                ease: \"power2.inOut\", \r\n                ...target,\r\n                onUpdate: () => this.controls.update()\r\n            });\r\n        } else {\r\n            this.mainCamera.position.set(position.x, position.y, position.z);\r\n            this.controls.target.set(target.x, target.y, target.z);\r\n            this.controls.update();\r\n        }\r\n    }\r\n\r\n    handleResize() {\r\n        const width = window.innerWidth;\r\n        const height = window.innerHeight;\r\n        \r\n        this.mainCamera.aspect = width / height;\r\n        this.mainCamera.updateProjectionMatrix();\r\n        this.mainRenderer.setSize(width, height);\r\n        this.composer.setSize(width, height);\r\n        this.bloomPass.resolution.set(width, height);\r\n    }\r\n\r\n    updateBloomStrength(strength) {\r\n        this.bloomPass.strength = Math.cbrt(strength);\r\n    }\r\n\r\n    setAntiAliasing(enabled) {\r\n        this.smaaPass.enabled = enabled;\r\n    }\r\n\r\n    render() {\r\n        this.controls.update();\r\n        this.composer.render();\r\n    }\r\n\r\n    renderProjections() {\r\n        for (const [key, renderer] of Object.entries(this.projectionRenderers)) {\r\n            renderer.render(this.projectionScenes[key], this.projectionCameras[key]);\r\n        }\r\n    }\r\n\r\n    cleanup() {\r\n        try {\r\n            if (this.mainCurve) {\r\n                this.mainCurve.geometry.dispose();\r\n                this.mainMaterial.dispose();\r\n            }\r\n            \r\n            if (this.projectionLines) {\r\n                for (const line of Object.values(this.projectionLines)) {\r\n                    line.geometry.dispose();\r\n                }\r\n            }\r\n            if (this.projectionMaterial) this.projectionMaterial.dispose();\r\n            \r\n            this.geometryCache.clear();\r\n            this.gridMaterialCache.forEach(material => material.dispose());\r\n            this.gridMaterialCache.clear();\r\n            \r\n            console.log('Scene cleanup completed');\r\n        } catch (error) {\r\n            console.warn('Scene cleanup error:', error);\r\n        }\r\n    }\r\n}\r\n","// Performance monitoring and optimization utilities\r\nexport class PerformanceMonitor {\r\n    constructor() {\r\n        this.stats = {\r\n            frameCount: 0,\r\n            lastFPSUpdate: performance.now(),\r\n            fps: 0,\r\n            lastFrameTime: 0\r\n        };\r\n        this.targetFrameTime = 1000 / 60; // 60 FPS\r\n    }\r\n\r\n    shouldRender(currentTime = 0) {\r\n        if (currentTime - this.stats.lastFrameTime < this.targetFrameTime) {\r\n            return false;\r\n        }\r\n        this.stats.lastFrameTime = currentTime;\r\n        return true;\r\n    }\r\n\r\n    update() {\r\n        this.stats.frameCount++;\r\n        const now = performance.now();\r\n        \r\n        if (now - this.stats.lastFPSUpdate >= 1000) {\r\n            this.stats.fps = Math.round((this.stats.frameCount * 1000) / (now - this.stats.lastFPSUpdate));\r\n            this.stats.frameCount = 0;\r\n            this.stats.lastFPSUpdate = now;\r\n            \r\n            // Optional: Display FPS in console for debugging\r\n            if (window.location.search.includes('debug')) {\r\n                console.log(`FPS: ${this.stats.fps}`);\r\n            }\r\n        }\r\n    }\r\n\r\n    getFPS() {\r\n        return this.stats.fps;\r\n    }\r\n}\r\n","// Main application entry point\r\nimport * as THREE from 'three';\r\nimport iro from '@jaames/iro';\r\nimport { gsap } from 'gsap';\r\nimport katex from 'katex';\r\nimport 'katex/dist/katex.css';\r\n\r\nimport { CONFIG, DEFAULT_PARAMS, MATHEMATICAL_EQUATIONS, CAMERA_PRESETS } from './config.js';\r\nimport { debounce, throttle } from './utils.js';\r\nimport { RotarySwitch, Knob } from './ui-controls.js';\r\nimport { AudioSystem } from './audio-system.js';\r\nimport { SceneManager } from './scene-manager.js';\r\nimport { PerformanceMonitor } from './performance-monitor.js';\r\n\r\nclass LissajousExplorer {\r\n    constructor() {\r\n        this.params = { ...DEFAULT_PARAMS };\r\n        this.knobs = {};\r\n        this.switches = {};\r\n        this.frameCount = 0;\r\n        \r\n        this.audioSystem = new AudioSystem();\r\n        this.sceneManager = new SceneManager();\r\n        this.performanceMonitor = new PerformanceMonitor();\r\n        \r\n        this.clock = new THREE.Clock();\r\n        \r\n        // Make gsap available globally for camera animations\r\n        window.gsap = gsap;\r\n        \r\n        this.init();\r\n    }async init() {\r\n        try {\r\n            // Initialize SceneManager after DOM is ready\r\n            this.sceneManager.initialize();\r\n            \r\n            this.initializeUI();\r\n            this.setupEventListeners();\r\n            this.setupMathRendering();\r\n            this.startAnimationLoop();\r\n            \r\n            console.log('3D Lissajous Figure Explorer initialized successfully');\r\n        } catch (error) {\r\n            console.error('Failed to initialize application:', error);\r\n            this.fallbackInit();\r\n        }\r\n    }\r\n\r\n    fallbackInit() {\r\n        try {\r\n            this.sceneManager.initialize();\r\n            this.sceneManager.updateCurve(this.params);\r\n            this.startAnimationLoop();        } catch (fallbackError) {\r\n            console.error('Critical initialization failure:', fallbackError);\r\n        }\r\n    }\r\n\r\n    initializeUI() {\r\n        this.initializeKnobs();\r\n        this.initializeColorPicker();\r\n        this.initializeSliders();\r\n        this.initializeToggles();\r\n        this.initializeCameraControls();\r\n        this.initializePanelControls();\r\n    }\r\n\r\n    initializeKnobs() {\r\n        // Clean up existing knobs first\r\n        this.cleanupKnobs();\r\n        \r\n        const freqContainer = document.getElementById('frequency-knobs');\r\n        const ampContainer = document.getElementById('amplitude-knobs');\r\n\r\n        // Clear any existing knobs to prevent duplicates\r\n        freqContainer.innerHTML = '';\r\n        ampContainer.innerHTML = '';\r\n\r\n        // Frequency knobs\r\n        ['a', 'b', 'c'].forEach(key => {\r\n            const wrapper = document.createElement('div');\r\n            wrapper.className = 'knob-wrapper';\r\n            freqContainer.appendChild(wrapper);\r\n            this.switches[key] = new RotarySwitch(wrapper, key, { \r\n                min: key === 'c' ? 0 : 1, \r\n                max: 10, \r\n                initial: this.params[key] \r\n            });\r\n            this.switches[key].addEventListener('change', e => {\r\n                this.params[key] = e.detail.value;\r\n                this.debouncedUpdateCurve();\r\n                this.throttledUpdateAudio();\r\n            });\r\n        });\r\n\r\n        // Amplitude knobs\r\n        ['A', 'B', 'C'].forEach(key => {\r\n            const wrapper = document.createElement('div');\r\n            wrapper.className = 'knob-wrapper';\r\n            ampContainer.appendChild(wrapper);\r\n            this.knobs[key] = new Knob(wrapper, key, {\r\n                initial: this.params[key], \r\n                min: 0.1, \r\n                max: 2, \r\n                precision: 1\r\n            });\r\n            this.knobs[key].addEventListener('change', e => {\r\n                this.params[key] = e.detail.value;\r\n                this.debouncedUpdateCurve();\r\n                this.throttledUpdateAudio();\r\n            });        });\r\n\r\n        // Clear phase shift containers and create phase shift knobs\r\n        document.getElementById('knob-deltaX-container').innerHTML = '';\r\n        document.getElementById('knob-deltaY-container').innerHTML = '';\r\n        document.getElementById('knob-deltaZ-container').innerHTML = '';\r\n\r\n        this.knobs.deltaX = new Knob(document.getElementById('knob-deltaX-container'), 'δx', {\r\n            initial: this.params.deltaX / Math.PI, \r\n            min: 0, \r\n            max: 2, \r\n            isPhase: true\r\n        });\r\n        this.knobs.deltaY = new Knob(document.getElementById('knob-deltaY-container'), 'δy', {\r\n            initial: this.params.deltaY / Math.PI, \r\n            min: 0, \r\n            max: 2, \r\n            isPhase: true\r\n        });\r\n        this.knobs.deltaZ = new Knob(document.getElementById('knob-deltaZ-container'), 'δz', {\r\n            initial: this.params.deltaZ / Math.PI, \r\n            min: 0, \r\n            max: 2, \r\n            isPhase: true\r\n        });\r\n\r\n        for (const knobKey of ['deltaX', 'deltaY', 'deltaZ']) {\r\n            this.knobs[knobKey].addEventListener('change', (e) => {\r\n                this.params[knobKey] = e.detail.value * Math.PI;\r\n                this.debouncedUpdateCurve();\r\n            });\r\n        }\r\n    }\r\n\r\n    cleanupKnobs() {\r\n        // Remove event listeners and clean up existing knobs/switches\r\n        for (const key in this.knobs) {\r\n            if (this.knobs[key] && typeof this.knobs[key].cleanup === 'function') {\r\n                this.knobs[key].cleanup();\r\n            }\r\n        }\r\n        for (const key in this.switches) {\r\n            if (this.switches[key] && typeof this.switches[key].cleanup === 'function') {\r\n                this.switches[key].cleanup();\r\n            }\r\n        }\r\n        this.knobs = {};\r\n        this.switches = {};\r\n    }initializeColorPicker() {\r\n        const colorPickerWrapper = document.getElementById(\"color-picker-wrapper\");\r\n        \r\n        // Clear any existing color picker\r\n        colorPickerWrapper.innerHTML = '<div id=\"color-picker\"></div>';\r\n        \r\n        this.colorPicker = new iro.ColorPicker(\"#color-picker\", {\r\n            width: 280,\r\n            color: { \r\n                h: this.params.color.h, \r\n                s: this.params.color.s * 100, \r\n                l: this.params.color.l * 100 \r\n            },\r\n            borderWidth: 1,\r\n            borderColor: \"#fff\",\r\n            layout: [\r\n                { component: iro.ui.Wheel },\r\n                { component: iro.ui.Slider, options: { sliderType: 'value' } }\r\n            ]\r\n        });\r\n\r\n        this.colorPicker.on('color:change', (color) => {\r\n            const { h, s, l } = color.hsl;\r\n            this.params.color = { h, s: s/100, l: l/100 };\r\n            this.debouncedUpdateCurve();\r\n        });\r\n    }\r\n\r\n    initializeSliders() {\r\n        const sliderParams = ['damping', 'lineThickness', 'gridThickness', 'gridBrightness', 'glow'];\r\n        \r\n        sliderParams.forEach(key => {\r\n            document.getElementById(key).addEventListener('input', (event) => {\r\n                const newValue = parseFloat(event.target.value);\r\n                this.params[key] = newValue;\r\n                  if (key === 'damping' || key === 'lineThickness') {\r\n                    this.debouncedUpdateCurve();\r\n                }\r\n                if (key === 'gridThickness') {\r\n                    this.updateGridThickness(newValue);\r\n                }\r\n                if (key === 'gridBrightness') {\r\n                    this.updateGridBrightness(newValue);\r\n                }\r\n                if (key === 'glow') {\r\n                    this.sceneManager.updateBloomStrength(newValue);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    initializeToggles() {\r\n        const toggles = [\r\n            { id: 'toggle-aa', param: 'aa', handler: (checked) => this.sceneManager.setAntiAliasing(checked) },\r\n            { id: 'toggle-phase', param: 'isPhaseAnimating' },\r\n            { id: 'toggle-audio', param: 'isAudioEnabled', handler: this.handleAudioToggle.bind(this) }\r\n        ];\r\n\r\n        toggles.forEach(({ id, param, handler }) => {\r\n            document.getElementById(id).addEventListener('change', (event) => {\r\n                this.params[param] = event.target.checked;\r\n                if (handler) handler(event.target.checked);\r\n            });\r\n        });\r\n    }\r\n\r\n    initializeCameraControls() {\r\n        const presets = {\r\n            'preset-persp': CAMERA_PRESETS.perspective,\r\n            'preset-top': CAMERA_PRESETS.top,\r\n            'preset-front': CAMERA_PRESETS.front,\r\n            'preset-side': CAMERA_PRESETS.side\r\n        };\r\n\r\n        for (const [id, position] of Object.entries(presets)) {\r\n            document.getElementById(id).addEventListener('click', () => {\r\n                this.sceneManager.setCameraPosition(position);\r\n            });\r\n        }        document.getElementById('toggle-rotate').addEventListener('click', () => {\r\n            this.sceneManager.controls.autoRotate = !this.sceneManager.controls.autoRotate;\r\n        });\r\n    }    initializePanelControls() {\r\n        this.initializeSidebarToggle();\r\n        this.initializeInfoPanel();\r\n    }    initializeSidebarToggle() {\r\n        // Add a small delay to ensure DOM is fully ready\r\n        setTimeout(() => {\r\n            // Get DOM elements\r\n            this.collapseBtn = document.getElementById('collapse-btn');\r\n            this.expandBtn = document.getElementById('expand-btn');\r\n            this.controlsPanel = document.getElementById('controls');\r\n            \r\n            // Validate elements exist\r\n            if (!this.collapseBtn || !this.expandBtn || !this.controlsPanel) {\r\n                console.error('Sidebar toggle elements not found');\r\n                return;\r\n            }\r\n\r\n            // Initialize sidebar state - start expanded\r\n            this.sidebarCollapsed = false;\r\n            \r\n            // Ensure expand button starts hidden since sidebar is expanded\r\n            this.expandBtn.classList.add('hidden');\r\n            this.expandBtn.classList.remove('show');\r\n\r\n            // Add event listeners with error handling\r\n            try {\r\n                this.collapseBtn.addEventListener('click', this.handleCollapseClick.bind(this));\r\n                this.expandBtn.addEventListener('click', this.handleExpandClick.bind(this));\r\n                \r\n                // Update state to ensure consistency\r\n                this.updateSidebarState();\r\n            } catch (error) {\r\n                console.error('Failed to add event listeners:', error);\r\n            }\r\n        }, 100);\r\n    }    handleCollapseClick(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.toggleSidebar(true);\r\n    }\r\n\r\n    handleExpandClick(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.toggleSidebar(false);\r\n    }\r\n\r\n    toggleSidebar(shouldCollapse = null) {\r\n        // Toggle state if not explicitly set\r\n        if (shouldCollapse === null) {\r\n            this.sidebarCollapsed = !this.sidebarCollapsed;\r\n        } else {\r\n            this.sidebarCollapsed = shouldCollapse;\r\n        }\r\n\r\n        this.updateSidebarState();\r\n    }    updateSidebarState() {\r\n        if (!this.controlsPanel || !this.expandBtn) {\r\n            console.error('Cannot update sidebar state - missing elements');\r\n            return;\r\n        }\r\n\r\n        if (this.sidebarCollapsed) {\r\n            // Sidebar is collapsed - hide panel, show expand button\r\n            this.controlsPanel.classList.add('collapsed');\r\n            this.expandBtn.classList.add('show');\r\n            this.expandBtn.classList.remove('hidden');\r\n            this.expandBtn.setAttribute('aria-hidden', 'false');\r\n        } else {\r\n            // Sidebar is expanded - show panel, hide expand button\r\n            this.controlsPanel.classList.remove('collapsed');\r\n            this.expandBtn.classList.remove('show');\r\n            this.expandBtn.classList.add('hidden');\r\n            this.expandBtn.setAttribute('aria-hidden', 'true');\r\n        }\r\n    }\r\n\r\n    initializeInfoPanel() {\r\n        const infoBtn = document.getElementById('info-btn');\r\n        const infoPanel = document.getElementById('info-panel');\r\n        const infoCloseBtn = document.getElementById('info-close-btn');\r\n        \r\n        if (!infoBtn || !infoPanel) {\r\n            console.warn('Info panel elements not found');\r\n            return;\r\n        }\r\n\r\n        // Info button toggle functionality\r\n        infoBtn.addEventListener('click', (e) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            this.toggleInfoPanel();\r\n        });\r\n\r\n        // Info close button functionality\r\n        if (infoCloseBtn) {\r\n            infoCloseBtn.addEventListener('click', (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                this.closeInfoPanel();\r\n            });\r\n        }\r\n    }\r\n\r\n    toggleInfoPanel() {\r\n        const infoBtn = document.getElementById('info-btn');\r\n        const infoPanel = document.getElementById('info-panel');\r\n        \r\n        if (infoBtn && infoPanel) {\r\n            const isVisible = infoPanel.classList.contains('visible');\r\n            \r\n            if (isVisible) {\r\n                this.closeInfoPanel();\r\n            } else {\r\n                this.openInfoPanel();\r\n            }\r\n        }\r\n    }\r\n\r\n    openInfoPanel() {\r\n        const infoBtn = document.getElementById('info-btn');\r\n        const infoPanel = document.getElementById('info-panel');\r\n        \r\n        if (infoBtn && infoPanel) {\r\n            infoPanel.classList.add('visible');\r\n            infoBtn.classList.add('active');\r\n        }\r\n    }\r\n\r\n    closeInfoPanel() {\r\n        const infoBtn = document.getElementById('info-btn');\r\n        const infoPanel = document.getElementById('info-panel');\r\n        \r\n        if (infoBtn && infoPanel) {\r\n            infoPanel.classList.remove('visible');\r\n            infoBtn.classList.remove('active');\r\n        }\r\n    }\r\n\r\n    setupEventListeners() {\r\n        // Create debounced/throttled versions of update functions\r\n        this.debouncedUpdateCurve = debounce(() => this.sceneManager.updateCurve(this.params), CONFIG.DEBOUNCE_CURVE_UPDATE);\r\n        this.debouncedUpdateGrid = debounce(() => this.sceneManager.updateGrid(this.params), CONFIG.DEBOUNCE_GRID_UPDATE);\r\n        this.throttledUpdateAudio = throttle(() => this.audioSystem.updateParams(this.params), CONFIG.THROTTLE_AUDIO_UPDATE);\r\n        \r\n        // Window resize handler\r\n        window.addEventListener('resize', debounce(() => this.sceneManager.handleResize(), CONFIG.DEBOUNCE_RESIZE));\r\n          // Cleanup on page unload\r\n        window.addEventListener('beforeunload', () => this.cleanup());\r\n        window.addEventListener('pagehide', () => this.cleanup());\r\n    }    setupMathRendering() {\r\n        try {\r\n            const equationsDiv = document.getElementById(\"equations\");\r\n            if (!equationsDiv) {\r\n                console.warn('Equations div not found');\r\n                return;\r\n            }\r\n            \r\n            // Parse and render each equation manually\r\n            const equations = [\r\n                'x(t) = A e^{-\\\\lambda t} \\\\sin(a t\\' + \\\\delta_x)',\r\n                'y(t) = B e^{-\\\\lambda t} \\\\sin(b t\\' + \\\\delta_y)',\r\n                'z(t) = C e^{-\\\\lambda t} \\\\sin(c t\\' + \\\\delta_z)'\r\n            ];\r\n            \r\n            // Clear the div\r\n            equationsDiv.innerHTML = '';\r\n            \r\n            equations.forEach((equation, index) => {\r\n                try {\r\n                    const div = document.createElement('div');\r\n                    div.className = 'equation-item';\r\n                    div.innerHTML = katex.renderToString(equation, {\r\n                        displayMode: true,\r\n                        throwOnError: false,\r\n                        trust: true\r\n                    });\r\n                    equationsDiv.appendChild(div);\r\n                } catch (eqError) {\r\n                    console.warn(`Failed to render equation ${index + 1}:`, eqError);\r\n                    // Fallback: show the raw LaTeX\r\n                    const div = document.createElement('div');\r\n                    div.className = 'equation-fallback';\r\n                    div.textContent = `$$${equation}$$`;\r\n                    equationsDiv.appendChild(div);\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.error('Math rendering setup failed:', error);\r\n            // Ultimate fallback\r\n            const equationsDiv = document.getElementById(\"equations\");\r\n            if (equationsDiv) {\r\n                equationsDiv.innerHTML = `\r\n                    <div class=\"equation-fallback\">\r\n                        <p>x(t) = A e^(-λt) sin(at' + δₓ)</p>\r\n                        <p>y(t) = B e^(-λt) sin(bt' + δᵧ)</p>\r\n                        <p>z(t) = C e^(-λt) sin(ct' + δᵧ)</p>\r\n                    </div>\r\n                `;\r\n            }\r\n        }\r\n    }\r\n\r\n    updateGridBrightness(brightness) {\r\n        const material = this.sceneManager.getGridMaterial(brightness);\r\n        this.sceneManager.gridGroup.traverse(child => {\r\n            if (child.material) {\r\n                child.material = material;\r\n            }\r\n        });\r\n    }\r\n\r\n    updateGridThickness(thickness) {\r\n        // Use a very short throttle for smooth grid thickness updates\r\n        if (!this.throttledGridThicknessUpdate) {\r\n            this.throttledGridThicknessUpdate = throttle(() => {\r\n                this.sceneManager.updateGrid(this.params);\r\n            }, 16); // 60fps\r\n        }\r\n        this.throttledGridThicknessUpdate();\r\n    }    async handleAudioToggle(enabled) {\r\n        try {\r\n            if (enabled) {\r\n                await this.audioSystem.init();\r\n                // Small delay to ensure audio context is ready\r\n                setTimeout(() => {\r\n                    this.audioSystem.setVolume(0.15);\r\n                    // Update audio parameters with current values immediately\r\n                    this.audioSystem.updateParams(this.params);\r\n                }, 100);\r\n            } else {\r\n                this.audioSystem.setVolume(0);\r\n            }\r\n        } catch (error) {\r\n            console.warn('Audio toggle failed:', error);\r\n            // Reset the toggle if audio fails\r\n            const audioToggle = document.getElementById('toggle-audio');\r\n            if (audioToggle) {\r\n                audioToggle.checked = false;\r\n                this.params.isAudioEnabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    startAnimationLoop() {\r\n        // Initialize scene elements\r\n        this.sceneManager.updateGrid(this.params);\r\n        this.sceneManager.updateCurve(this.params);\r\n        \r\n        // Start the animation loop\r\n        this.animate();\r\n    }\r\n\r\n    animate = (currentTime = 0) => {\r\n        requestAnimationFrame(this.animate);\r\n        \r\n        // Frame rate limiting\r\n        if (!this.performanceMonitor.shouldRender(currentTime)) {\r\n            return;\r\n        }\r\n        \r\n        this.performanceMonitor.update();\r\n        this.frameCount++;\r\n\r\n        // Handle phase animation\r\n        if (this.params.isPhaseAnimating) {\r\n            this.updatePhaseAnimation();\r\n        }\r\n        \r\n        // Main render\r\n        this.sceneManager.render();\r\n        \r\n        // Update projections less frequently for performance\r\n        if (this.frameCount % CONFIG.PROJECTION_UPDATE_INTERVAL === 0) {\r\n            this.sceneManager.renderProjections();\r\n        }\r\n    }\r\n\r\n    updatePhaseAnimation() {\r\n        const time = this.clock.getElapsedTime();\r\n        const deltaXValue = ((time * 0.3) % 2);\r\n        const deltaYValue = ((time * 0.4) % 2);\r\n        const deltaZValue = ((time * 0.5) % 2);\r\n        \r\n        this.params.deltaX = deltaXValue * Math.PI;\r\n        this.params.deltaY = deltaYValue * Math.PI;\r\n        this.params.deltaZ = deltaZValue * Math.PI;\r\n        \r\n        this.knobs.deltaX.setValue(deltaXValue);\r\n        this.knobs.deltaY.setValue(deltaYValue);\r\n        this.knobs.deltaZ.setValue(deltaZValue);\r\n        this.debouncedUpdateCurve();\r\n    }    cleanup() {\r\n        try {\r\n            this.cleanupKnobs();\r\n            this.cleanupSidebarEventListeners();\r\n            this.sceneManager.cleanup();\r\n            this.audioSystem.cleanup();\r\n            console.log('Application cleanup completed');\r\n        } catch (error) {\r\n            console.warn('Cleanup error:', error);\r\n        }\r\n    }\r\n\r\n    cleanupSidebarEventListeners() {\r\n        if (this.collapseBtn) {\r\n            this.collapseBtn.removeEventListener('click', this.handleCollapseClick);\r\n        }\r\n        if (this.expandBtn) {\r\n            this.expandBtn.removeEventListener('click', this.handleExpandClick);\r\n        }\r\n    }\r\n}\r\n\r\n// Initialize the application when the DOM is loaded\r\nlet appInitialized = false;\r\nlet appInstance = null;\r\n\r\nfunction initializeApp() {\r\n    if (appInitialized) return;\r\n    appInitialized = true;\r\n    \r\n    // Clean up any existing instance\r\n    if (appInstance && typeof appInstance.cleanup === 'function') {\r\n        appInstance.cleanup();\r\n    }\r\n    \r\n    appInstance = new LissajousExplorer();\r\n}\r\n\r\nif (document.readyState === 'loading') {\r\n    document.addEventListener('DOMContentLoaded', initializeApp);\r\n} else {\r\n    initializeApp();\r\n}\r\n"],"names":["CONFIG","DEFAULT_PARAMS","CAMERA_PRESETS","clamp","value","min","max","debounce","func","wait","timeout","args","later","throttle","limit","inThrottle","context","validateParams","params","createCacheKey","needsUpdate","currentParams","lastParams","currentString","lastString","BaseKnob","container","label","options","isSwitch","svgNS","svg","background","indicator","text","labelText","newValue","RotarySwitch","rect","centerX","centerY","clientX","clientY","currentAngle","numSteps","stepAngle","valueIndex","Knob","dx","dy","angle","AudioSystem","key","osc","gainNode","error","now","volume","SceneManager","THREE.Scene","THREE.Color","THREE.Vector3","projGridColor","scene","grid","THREE.GridHelper","webglCanvas","canvasXY","canvasXZ","canvasYZ","THREE.WebGLRenderer","r","THREE.PerspectiveCamera","THREE.OrthographicCamera","EffectComposer","RenderPass","UnrealBloomPass","THREE.Vector2","SMAAPass","OrbitControls","THREE.Group","color","position","canvas","size","texture","THREE.CanvasTexture","material","THREE.SpriteMaterial","sprite","THREE.Sprite","brightness","THREE.MeshStandardMaterial","divisions","thickness","group","step","halfSize","i","pos","vPath","THREE.LineCurve3","THREE.Mesh","THREE.TubeGeometry","hPath","child","grandchild","currentMaterial","gridXY","gridXZ","gridYZ","line","tempColor","THREE.LineBasicMaterial","cacheKey","points","lineGeometry","THREE.BufferGeometry","path","THREE.CatmullRomCurve3","mainGeometry","THREE.Line","t","time","decay","x","y","z","target","width","height","strength","enabled","renderer","PerformanceMonitor","currentTime","LissajousExplorer","__publicField","THREE.Clock","gsap","fallbackError","freqContainer","ampContainer","wrapper","e","knobKey","colorPickerWrapper","iro","h","s","l","event","checked","id","param","handler","presets","shouldCollapse","infoBtn","infoPanel","infoCloseBtn","equationsDiv","equations","equation","index","div","katex","eqError","audioToggle","deltaXValue","deltaYValue","deltaZValue","appInitialized","appInstance","initializeApp"],"mappings":"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"}